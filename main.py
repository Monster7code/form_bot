import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.filters import Command
from aiogram import F
from keyboards import *
from states import *
import re


bot = Bot("6323493760:AAH9r9cDHBTnMecU18g3bVY8mKsTGqgvkPk")
loop = asyncio.get_event_loop()
dp = Dispatcher(Bot=bot, loop=loop, storage=MemoryStorage())


async def start():
    try:
        await dp.start_polling(bot)

    finally:
        await bot.session.close()
        return dp


@dp.message(Command("start"))
async def any_message(message: Message, state: FSMContext):
    await state.update_data(user_id=message.from_user.id)
    await message.answer(f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!",
                         reply_markup=ReplyKeyboardRemove())
    await message.answer("üëæ–ü—Ä–∏–≤–µ—Ç! –ò—â–µ—à—å –∫–æ–º–ø–∞–Ω–∏—é?\n–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤ –Ω–µ—ë –ø–æ–ø–∞—Å—Ç—å,"
                         " –æ—Å—Ç–∞–ª–æ—Å—å —Ç–æ–ª—å–∫–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ, –ø–æ–µ—Ö–∞–ª–∏?",
                         reply_markup=start_keyboard.as_markup(resize_keyboard=True))


@dp.message(F.text.lower() == "üëæ –ø–æ–µ—Ö–∞–ª–∏")
async def form(message: Message, state: FSMContext):
    await state.set_state(From.start_form)
    await message.answer("–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?",
                         reply_markup=default_keyboard.as_markup(resize_keyboard=True))


@dp.message(From.start_form)
async def start_from(message: Message, state: FSMContext):
    if message.text == "–ù–∞–∑–∞–¥":
        await state.clear()
        await message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é",
                             reply_markup=start_keyboard.as_markup(resize_keyboard=True))
    else:
        await state.update_data(name=message.text)
        await state.set_state(From.age_form)
        await message.answer(f"–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, {message.text}!\n–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?",
                             reply_markup=default_keyboard.as_markup(resize_keyboard=True))


@dp.message(From.age_form)
async def age_from(message: Message, state: FSMContext):
    if message.text == "–ù–∞–∑–∞–¥":
        await state.set_state(From.start_form)
        await message.answer("–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?",
                             reply_markup=default_keyboard.as_markup(resize_keyboard=True))
    else:

        pattern = r'^(\d{1,7})$'
        age = re.search(pattern, message.text)
        if age:
            await state.update_data(age=message.text)
            await state.set_state(From.city_form)
            await message.answer(f"–û—Ç–ª–∏—á–Ω–æ!\n–ò–∑ –∫–∞–∫–æ–≥–æ –≤—ã –≥–æ—Ä–æ–¥–∞?",
                                 reply_markup=default_keyboard.as_markup(resize_keyboard=True))
        else:
            await message.answer("–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç!",

                                 reply_markup=default_keyboard.as_markup(resize_keyboard=True))


@dp.message(From.city_form)
async def city_from(message: Message, state: FSMContext):
    if message.text == "–ù–∞–∑–∞–¥":
        await state.set_state(From.age_form)
        await message.answer("–£–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç!",
                             reply_markup=default_keyboard.as_markup(resize_keyboard=True))
    else:
        await state.update_data(city=message.text)
        await state.set_state(From.about_form)
        await message.answer(f"–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ",
                             reply_markup=default_keyboard.as_markup(resize_keyboard=True))


@dp.message(From.about_form)
async def about_from(message: Message, state: FSMContext):
    if message.text == "–ù–∞–∑–∞–¥":
        await state.set_state(From.city_form)
        await message.answer("–ò–∑ –∫–∞–∫–æ–≥–æ –≤—ã –≥–æ—Ä–æ–¥–∞?",
                             reply_markup=default_keyboard.as_markup(resize_keyboard=True))
    else:
        await state.update_data(about=message.text)
        await state.update_data(banlist=[])
        await state.set_state(From.choice_friend_form)
        await message.answer(f"–ö–æ–≥–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ —Å–µ–±–µ –Ω–∞–π—Ç–∏?",
                             reply_markup=edit_keyboard_choice_friend().as_markup(resize_keyboard=True))


@dp.callback_query(F.data.in_(['drunk', 'friend', 'social', 'love_night', 'love', 'back', 'submit']))
async def process_buttons_press(callback: CallbackQuery, state: FSMContext):

    data = await state.get_data()
    banlist = data.get("banlist")
    print(banlist)
    if callback.data == 'back':
        await callback.message.delete()
        await state.set_state(From.about_form)
        await bot.send_message(data.get("user_id"), f"–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ",
                               reply_markup=default_keyboard.as_markup(resize_keyboard=True))
    elif callback.data == 'submit':
        print(banlist)
        if len(banlist) == 0:
            await bot.send_message(data.get("user_id"), f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–∏—Ä–µ—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –∏–∑ —Å–ø–∏—Å–∫–∞?")
        else:
            await state.update_data(banlist_result=banlist)
            await callback.message.delete()
            await state.set_state(From.drunk_form)
            await bot.send_message(data.get("user_id"), f"–ö–∞–∫ —á–∞—Å—Ç–æ –≤—ã –≤—ã–ø–∏–≤–∞–µ—Ç–µ?",
                                   reply_markup=drunk_keyboard.as_markup(resize_keyboard=True))
    else:
        if callback.data == 'drunk':
            banlist.append("–°–æ–±—É—Ç—ã–ª—å–Ω–∏–∫–æ–≤")
        elif callback.data == 'friend':
            banlist.append("–î—Ä—É–∑–µ–π –∏ –∑–Ω–∞–∫–æ–º—ã—Ö")
        elif callback.data == 'social':
            banlist.append("–ï–¥–∏–Ω–æ–º—ã—à–ª–∏–Ω–∏–∫–æ–≤")
        elif callback.data == 'love_night':
            banlist.append("–û—Ç–Ω–æ—à–µ–Ω–∏—è –Ω–∞ –Ω–æ—á—å")
        elif callback.data == 'love':
            banlist.append("–õ—é–±–æ–≤–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è")

        await state.update_data(banlist=banlist)

        await callback.answer()
        await callback.message.edit_text(
            text=f'{banlist[len(banlist)-1]} –¥–æ–±–∞–≤–ª–µ–Ω–æ',
            reply_markup=edit_keyboard_choice_friend(banlist).as_markup(resize_keyboard=True)
            )


@dp.message(From.drunk_form)
async def about_from(message: Message, state: FSMContext):
    if message.text == "–ù–∞–∑–∞–¥":
        await state.update_data(banlist=[])
        await state.set_state(From.choice_friend_form)
        await message.answer(f"–ö–æ–≥–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ —Å–µ–±–µ –Ω–∞–π—Ç–∏?",
                             reply_markup=ReplyKeyboardRemove())
        await message.answer(f"–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞:",
                             reply_markup=edit_keyboard_choice_friend().as_markup(resize_keyboard=True))
    else:
        await state.update_data(drunk=message.text)
        await state.set_state(From.choice_soul_form)
        await state.update_data(banlist_soul=[])
        await message.answer(f"–û—Ç–ª–∏—á–Ω–æ",
                             reply_markup=ReplyKeyboardRemove())
        await message.answer(f"–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ —á—Ç–æ –≤–∞–º –ø–æ –¥—É—à–µ:",
                             reply_markup=soul_keyboard().as_markup(resize_keyboard=True))


@dp.callback_query(F.data.in_(['walk', 'walk_drunk', 'walk_friend', 'bar',
                               'club', 'hookah', 'back_soul', 'submit_soul', 'journey', 'sport', 'table_game']))
async def process_buttons_press(callback: CallbackQuery, state: FSMContext):

    data = await state.get_data()
    banlist = data.get("banlist_soul")
    if callback.data == 'back_soul':
        await callback.message.delete()
        await state.set_state(From.drunk_form)
        await bot.send_message(data.get("user_id"), f"–ö–∞–∫ —á–∞—Å—Ç–æ –≤—ã –≤—ã–ø–∏–≤–∞–µ—Ç–µ?",
                               reply_markup=ReplyKeyboardRemove())
        await bot.send_message(data.get("user_id"), f"–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞:",
                               reply_markup=drunk_keyboard.as_markup(resize_keyboard=True))
    elif callback.data == 'submit_soul':
        if len(banlist) == 0:
            await bot.send_message(data.get("user_id"), f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–∏—Ä–µ—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –∏–∑ —Å–ø–∏—Å–∫–∞?")
        else:
            await state.update_data(banlist_soul_result=banlist)
            await callback.message.delete()
            await state.set_state(From.sochial_network_form)
            await bot.send_message(data.get("user_id"), f"–ß–µ–º –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å –Ω–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π –æ—Å–Ω–æ–≤–µ?",
                                   reply_markup=sochial_network_keyboard)
    else:
        if callback.data == 'walk':
            banlist.append("–ü—Ä–æ–≥—É–ª–∫–∏")
        elif callback.data == 'walk_drunk':
            banlist.append("–ü—Ä–æ–≥—É–ª–∫–∏ —Å –∞–ª–∫–æ–≥–æ–ª–µ–º")
        elif callback.data == 'walk_friend':
            banlist.append("–ü—Ä–æ–≥—É–ª–∫–∏ —Å –¥—Ä—É–∑—å—è–º–∏")
        elif callback.data == 'bar':
            banlist.append("–ë–∞—Ä")
        elif callback.data == 'club':
            banlist.append("–ö–ª—É–±")
        elif callback.data == 'hookah':
            banlist.append("–ö–∞–ª—å—è–Ω–Ω–∞—è")
        elif callback.data == 'journey':
            banlist.append("–ü–æ—Ö–æ–¥—ã")
        elif callback.data == 'sport':
            banlist.append("–°–ø–æ—Ä—Ç")
        elif callback.data == 'table_game':
            banlist.append("–ù–∞—Å—Ç–æ–ª—å–Ω—ã–µ –∏–≥—Ä—ã")

        await state.update_data(banlist=banlist)

        await callback.answer()
        await callback.message.edit_text(
            text=f'{banlist[len(banlist)-1]} –¥–æ–±–∞–≤–ª–µ–Ω–æ',
            reply_markup=soul_keyboard(banlist).as_markup(resize_keyboard=True)
            )


@dp.message(From.sochial_network_form)
async def about_from(message: Message, state: FSMContext):
    if message.text == "–ù–∞–∑–∞–¥":
        await state.set_state(From.choice_soul_form)
        await state.update_data(banlist_soul=[])
        await message.answer(f"–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ —á—Ç–æ –≤–∞–º –ø–æ –¥—É—à–µ:",
                             reply_markup=soul_keyboard().as_markup(resize_keyboard=True))
    else:
        await state.update_data(sochial_network=message.text)
        await state.set_state(From.conflict_rate_from)
        await message.answer(f"–û—Ü–µ–Ω–∏—Ç–µ —Å–≤–æ—é –∫–æ–Ω—Ñ–ª–∏–∫—Ç–Ω–æ—Å—Ç—å –æ—Ç 1 –¥–æ 10",
                             reply_markup=default_keyboard.as_markup(resize_keyboard=True))


@dp.message(From.conflict_rate_from)
async def about_from(message: Message, state: FSMContext):
    if message.text == "–ù–∞–∑–∞–¥":
        await state.set_state(From.sochial_network_form)
        await message.answer(f"–ß–µ–º –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å –Ω–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π –æ—Å–Ω–æ–≤–µ?",
                             reply_markup=sochial_network_keyboard)
    else:
        pattern = r'^(\d{1,10})$'
        rate = re.search(pattern, message.text)
        if rate:
            if (int(message.text) <= 10) and (int(message.text) >= 0):
                await state.update_data(rate_conflict=message.text)
                await state.set_state(From.new_people_from)
                await message.answer(f"–ö–∞–∫ –≤—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ—Å—å –∫ —Ç–æ–º—É —á—Ç–æ–± –≤ –≤–∞—à—É –∫–æ–º–ø–∞–Ω–∏—é –ø—Ä–∏—Ö–æ–¥–∏–ª–∏ –Ω–æ–≤–µ–Ω—å–∫–∏–µ –ª—é–¥–∏?",
                                     reply_markup=new_people_keyboard.as_markup(resize_keyboard=True))
            else:
                await message.answer(f"–ü—Ä–æ–≤–µ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
                                     reply_markup=default_keyboard.as_markup(resize_keyboard=True))
        else:
            await message.answer(f"–ü—Ä–æ–≤–µ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
                                 reply_markup=default_keyboard.as_markup(resize_keyboard=True))


@dp.message(From.new_people_from)
async def about_from(message: Message, state: FSMContext):
    if message.text == "–ù–∞–∑–∞–¥":
        await state.set_state(From.conflict_rate_from)
        await message.answer(f"–û—Ü–µ–Ω–∏—Ç–µ —Å–≤–æ—é –∫–æ–Ω—Ñ–ª–∏–∫—Ç–Ω–æ—Å—Ç—å –æ—Ç 1 –¥–æ 10",
                             reply_markup=default_keyboard.as_markup(resize_keyboard=True))
    else:
        await state.update_data(new_people=message.text)
        await state.set_state(From.link_form)
        await message.answer(f"–ü—Ä–∏—à–ª–∏—Ç–µ —Å–≤–æ—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ VK (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)\n–í–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–π —Ç–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è",
                             reply_markup=default_keyboard.as_markup(resize_keyboard=True))


@dp.message(From.link_form)
async def about_from(message: Message, state: FSMContext):
    if message.text == "–ù–∞–∑–∞–¥":
        await state.set_state(From.new_people_from)
        await message.answer(f"–ö–∞–∫ –≤—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ—Å—å –∫ —Ç–æ–º—É —á—Ç–æ–± –≤ –≤–∞—à—É –∫–æ–º–ø–∞–Ω–∏—é –ø—Ä–∏—Ö–æ–¥–∏–ª–∏ –Ω–æ–≤–µ–Ω—å–∫–∏–µ –ª—é–¥–∏?",
                             reply_markup=new_people_keyboard.as_markup(resize_keyboard=True))
    else:
        await state.update_data(login=message.text)
        await state.set_state(From.final_form)
        await message.answer(f"–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ä–º—É?",
                             reply_markup=final_keyboard.as_markup(resize_keyboard=True))


@dp.message(From.final_form)
async def about_from(message: Message, state: FSMContext):
    if message.text == "–ù–∞–∑–∞–¥":
        await state.set_state(From.link_form)
        await message.answer(f"–ü—Ä–∏—à–ª–∏—Ç–µ —Å–≤–æ—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ VK (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)\n–í–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–π —Ç–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è",
                             reply_markup=default_keyboard.as_markup(resize_keyboard=True))
    elif message.text == "–û—Ç–ø—Ä–∞–≤–∏—Ç—å":
        data = await state.get_data()
        name = data.get("name")
        age = data.get("age")
        city = data.get("city")
        about = data.get("about")
        banlist_result = data.get("banlist_result")
        drunk = data.get("drunk")
        banlist_soul_result = data.get("banlist_soul_result")
        sochial_network = data.get("sochial_network")
        rate_conflict = data.get("rate_conflict")
        new_people = data.get("new_people")
        login = data.get("login")
        await bot.send_message("5805700754", f"–û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è{message.from_user.full_name}\n"
                                             f"–ò–º—è {name}\n"
                               f"–í–æ–∑—Ä–∞—Å—Ç {age}\n"
                               f"–ì–æ—Ä–æ–¥ {city}\n"
                               f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è {about}\n"
                               f"–ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –≤ –¥—Ä—É–∑—å—è—Ö {banlist_result}\n"
                               f"–û—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ –∞–ª–∫–æ–≥–æ–ª—é {drunk}\n"
                               f"–ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –≤ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è—Ö {banlist_soul_result}\n"
                               f"–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ {sochial_network}\n"
                               f"–ö–æ–Ω—Ñ–ª–∏–∫—Ç–Ω–æ—Å—Ç—å {rate_conflict}\n"
                               f"–û—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ –Ω–æ–≤–∏—á–∫–∞–º {new_people}\n"
                               f"–°—Å—ã–ª–∫–∏ {login}\n"
                               )
        await state.set_state(From.final_form)
        await message.answer(f"–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Ñ–æ—Ä–º—É",
                             reply_markup=ReplyKeyboardRemove())
if __name__ == "__main__":
    asyncio.run(start())
